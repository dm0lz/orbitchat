{"version":3,"sources":["features/chat/Chat.module.css","features/counter/counterAPI.js","features/counter/counterSlice.js","features/counter/Counter.js","features/chat/chatAPI.js","features/chat/chatSlice.js","features/login/loginAPI.js","features/login/loginSlice.js","features/crypto/cryptoSlice.js","app/store.js","features/chat/timer.js","hooks/useWindowDimensions.js","features/chat/Chat.js","features/login/Login.js","features/crypto/TickerCard.js","hooks/usePrevious.js","features/crypto/Crypto.js","app/orbit.js","App.js","serviceWorker.js","index.js","features/crypto/Crypto.module.css","features/counter/Counter.module.css"],"names":["module","exports","fetchCount","amount","Promise","resolve","setTimeout","data","incrementAsync","createAsyncThunk","a","response","counterSlice","createSlice","name","initialState","value","status","reducers","increment","state","decrement","incrementByAmount","action","payload","extraReducers","builder","addCase","pending","fulfilled","actions","selectCount","counter","Counter","count","useSelector","dispatch","useDispatch","useState","incrementAmount","setIncrementAmount","incrementValue","Number","className","styles","row","button","aria-label","onClick","textbox","onChange","e","target","asyncButton","getState","fetchOrbitMessages","orbit","load","items","iterator","limit","reverse","collect","map","hash","message","username","timestamp","addOrbitMessage","Date","now","add","console","log","removeOrbitMessage","remove","fetchMessages","addMessage","el","removeMessage","event","chatSlice","messages","peers","events","addEvent","unshift","addPeer","Set","removePeer","filter","peer","updatePeers","includes","push","item","getMessages","chat","fetchOrbitUsers","users","peerId","createOrbitUser","usersDb","ipfs","id","removeOrbitUser","fetchUsers","obj","createUser","usersFetched","existingUser","find","user","usernameError","existingAccount","destroyUser","loginSlice","errors","loadingStatus","userSelector","login","cryptoSlice","aavePrice","ethPrice","btcPrice","newTicker","product_id","price","store","configureStore","reducer","counterReducer","chatReducer","loginReducer","crypto","cryptoReducer","Timer","useStopwatch","autoStart","seconds","minutes","hours","days","isRunning","start","pause","reset","style","getWindowDimensions","window","width","innerWidth","height","innerHeight","ChatMessagesWrapper","styled","div","InputWrapper","Avatar","img","AvatarWrapper","Chat","props","input","setInput","isMobile","setIsMobile","rtcPeerConnections","setRtcPeerConnections","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","useWindowDimensions","messagesEndRef","useRef","chatEventRoom","webrtcRoom","videoRefs","history","useHistory","peerUsers","typingPeers","key","groupedEvents","reduce","result","getTypingPeers","Object","messagesDb","onbeforeunload","current","leave","pc","close","scrollToBottom","length","keys","on","address","Room","createRtcPeerConnection","toString","from","handleRtcRoomMessage","connection","JSON","parse","desc","candidate","to","type","sdp","atob","setRemoteDescription","createAnswer","answer","setLocalDescription","encodeSdp","localDescription","broadcast","RTCSessionDescription","addIceCandidate","RTCIceCandidate","error","RTCPeerConnection","iceServers","urls","onicecandidate","stringify","ontrack","ref","srcObject","streams","videos","paused","play","onnegotiationneeded","createOffer","offer","streamVideo","navigator","mediaDevices","getUserMedia","video","audio","stream","forEach","getTracks","track","addTrack","btoa","formatDate","date","parseInt","moment","startOf","fromNow","getAttribute","scrollIntoView","behavior","setVideoRef","orderedMessages","slice","sort","b","containerWrapper","index","autoPlay","controls","playsInline","muted","peerid","disabled","join","alignRightMobile","alignRight","alignLeft","src","alt","textRight","delete","onFocus","onBlur","Login","setUsername","isSubmitted","setIsSubmitted","userName","then","TickerCard","tick","usePrevious","ticker","red","black","Crypto","refWebSocket","url","onMessage","msg","onOpen","sendMessage","channels","product_ids","Websocket","OrbitDB","require","orbitInstance","IPFS","create","repo","preload","enabled","EXPERIMENTAL","pubsub","relay","hop","active","config","Addresses","Swarm","process","REACT_APP_SIGNALLING","createInstance","orbitdb","options","accessController","write","replicate","sync","localOnly","open","App","orbitConnector","this","setState","href","path","React","Component","connect","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.45c6872f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"delete\":\"Chat_delete__3vqd9\",\"alignRight\":\"Chat_alignRight__3DVpy\",\"alignRightMobile\":\"Chat_alignRightMobile__1Wqju\",\"alignLeft\":\"Chat_alignLeft__qJ4ES\",\"containerWrapper\":\"Chat_containerWrapper__ZFsr0\",\"textRight\":\"Chat_textRight__MP8aq\"};","// A mock function to mimic making an async request for data\nexport function fetchCount(amount = 1) {\n  return new Promise((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { fetchCount } from \"./counterAPI\";\n\nconst initialState = {\n  value: 0,\n  status: \"idle\",\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  \"counter/fetchCount\",\n  async (amount) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const counterSlice = createSlice({\n  name: \"counter\",\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = \"loading\";\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = \"idle\";\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd = (amount) => (dispatch, getState) => {\n  const currentValue = selectCount(getState());\n  if (currentValue % 2 === 1) {\n    dispatch(incrementByAmount(amount));\n  }\n};\n\nexport default counterSlice.reducer;\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  decrement,\n  increment,\n  incrementByAmount,\n  incrementAsync,\n  incrementIfOdd,\n  selectCount,\n} from './counterSlice';\nimport styles from './Counter.module.css';\n\nexport function Counter() {\n  const count = useSelector(selectCount);\n  const dispatch = useDispatch();\n  const [incrementAmount, setIncrementAmount] = useState('2');\n\n  const incrementValue = Number(incrementAmount) || 0;\n\n  return (\n    <div>\n      <div className={styles.row}>\n        <button\n          className={styles.button}\n          aria-label=\"Decrement value\"\n          onClick={() => dispatch(decrement())}\n        >\n          -\n        </button>\n        <span className={styles.value}>{count}</span>\n        <button\n          className={styles.button}\n          aria-label=\"Increment value\"\n          onClick={() => dispatch(increment())}\n        >\n          +\n        </button>\n      </div>\n      <div className={styles.row}>\n        <input\n          className={styles.textbox}\n          aria-label=\"Set increment amount\"\n          value={incrementAmount}\n          onChange={(e) => setIncrementAmount(e.target.value)}\n        />\n        <button\n          className={styles.button}\n          onClick={() => dispatch(incrementByAmount(incrementValue))}\n        >\n          Add Amount\n        </button>\n        <button\n          className={styles.asyncButton}\n          onClick={() => dispatch(incrementAsync(incrementValue))}\n        >\n          Add Async\n        </button>\n        <button\n          className={styles.button}\n          onClick={() => dispatch(incrementIfOdd(incrementValue))}\n        >\n          Add If Odd\n        </button>\n      </div>\n    </div>\n  );\n}\n","export const fetchOrbitMessages = async (orbit) => {\n  await orbit.load();\n  const items = orbit\n    .iterator({ limit: -1, reverse: false })\n    .collect()\n    .map((e) => ({\n      hash: e.hash,\n      message: e.payload.value.message,\n      username: e.payload.value.username,\n      timestamp: e.payload.value.timestamp,\n    }));\n  return items;\n};\n\nexport const addOrbitMessage = async (payload) => {\n  const timestamp = Date.now();\n  const { message, username } = payload;\n  try {\n    const hash = await payload.orbit.add({\n      message: message,\n      username: username,\n      timestamp,\n    });\n    return {\n      message: message,\n      username: username,\n      hash,\n      timestamp,\n    };\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const removeOrbitMessage = async (payload) => {\n  await payload.orbit.remove(payload.hash);\n  return payload.hash;\n};\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport {\n  fetchOrbitMessages,\n  addOrbitMessage,\n  removeOrbitMessage,\n} from \"./chatAPI\";\n\nconst initialState = {\n  messages: [],\n  status: \"idle\",\n  peers: [],\n  events: [],\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const fetchMessages = createAsyncThunk(\n  \"chat/fetchMessages\",\n  async (orbit) => {\n    const response = await fetchOrbitMessages(orbit);\n    // The value we return becomes the `fulfilled` action payload\n    return response;\n  }\n);\n\nexport const addMessage = createAsyncThunk(\n  \"chat/addMessage\",\n  async (payload, el) => {\n    const response = await addOrbitMessage(payload);\n    return response;\n  }\n);\n\nexport const removeMessage = createAsyncThunk(\n  \"chat/removeMessage\",\n  async (payload, event) => {\n    const response = await removeOrbitMessage({\n      orbit: payload.orbit,\n      hash: payload.hash,\n    });\n    return response;\n  }\n);\n\nexport const chatSlice = createSlice({\n  name: \"chat\",\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    addEvent: (state, action) => {\n      state.events.unshift(action.payload);\n    },\n    addPeer: (state, action) => {\n      state.peers = [...new Set([...state.peers, action.payload])];\n    },\n    removePeer: (state, action) => {\n      state.peers = state.peers.filter((peer) => peer !== action.payload);\n    },\n    updatePeers: (state, action) => {\n      state.peers = state.peers.filter((peer) => action.payload.includes(peer));\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(addMessage.pending, (state) => {\n        state.status = \"loading\";\n      })\n      .addCase(addMessage.fulfilled, (state, action) => {\n        state.status = \"idle\";\n        state.messages.push(action.payload);\n      })\n      .addCase(removeMessage.pending, (state) => {\n        state.status = \"loading\";\n      })\n      .addCase(removeMessage.fulfilled, (state, action) => {\n        state.status = \"idle\";\n        state.messages = state.messages.filter(\n          (item) => item.hash !== action.payload\n        );\n      })\n      .addCase(fetchMessages.pending, (state) => {\n        state.status = \"loading\";\n      })\n      .addCase(fetchMessages.fulfilled, (state, action) => {\n        state.status = \"idle\";\n        state.messages = action.payload;\n      });\n  },\n});\n\nexport const { addPeer, updatePeers, removePeer, addEvent } = chatSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const getMessages = (state) => state.chat.messages;\n// export const orbitSelector = (state) => state.orbit;\nexport const statusSelector = (state) => state.chat.status;\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\n// export const incrementIfOdd = (amount) => (dispatch, getState) => {\n//   const currentValue = selectCount(getState());\n//   if (currentValue % 2 === 1) {\n//     dispatch(incrementByAmount(amount));\n//   }\n// };\n\nexport default chatSlice.reducer;\n","export const fetchOrbitUsers = async (orbit) => {\n  await orbit.load();\n  const users = orbit\n    .iterator({ limit: -1, reverse: true })\n    .collect()\n    .map((e) => ({\n      hash: e.hash,\n      peerId: e.payload.value.peerId,\n      username: e.payload.value.username,\n      timestamp: e.payload.value.timestamp,\n    }));\n  return users;\n};\n\nexport const createOrbitUser = async (payload) => {\n  const timestamp = Date.now();\n  const { usersDb, ipfs } = payload.orbit;\n  const { username } = payload;\n  const peerId = await ipfs.id();\n  try {\n    const hash = await usersDb.add({\n      peerId: peerId.id,\n      username,\n      timestamp,\n    });\n    return {\n      hash,\n      peerId: peerId.id,\n      username,\n      timestamp,\n    };\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const removeOrbitUser = async (payload) => {\n  await payload.orbit.remove(payload.hash);\n  return payload.hash;\n};\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { createOrbitUser, fetchOrbitUsers, removeOrbitUser } from \"./loginAPI\";\n\nconst initialState = {\n  username: \"\",\n  errors: [],\n  status: \"idle\",\n  users: [],\n};\n\nexport const fetchUsers = createAsyncThunk(\n  \"login/fetchUsers\",\n  async (payload, obj) => {\n    const response = await fetchOrbitUsers(payload);\n    return response;\n  }\n);\n\nexport const createUser = createAsyncThunk(\n  \"login/createUser\",\n  async (payload, obj) => {\n    try {\n      const users = await fetchOrbitUsers(payload.orbit.usersDb);\n      obj.dispatch(usersFetched(users));\n      const existingUser = users.find(\n        (user) => user.username === payload.username\n      );\n      const peerId = await payload.orbit.ipfs.id();\n      if (existingUser) {\n        if (existingUser.peerId === peerId.id) {\n          return { username: existingUser.username };\n        } else {\n          obj.dispatch(usernameError(\"Username already exists\"));\n          return { username: \"\" };\n        }\n      } else {\n        const existingAccount = users.find((user) => user.peerId === peerId.id);\n        if (existingAccount) {\n          return { username: existingAccount.username };\n        } else {\n          const response = await createOrbitUser(payload);\n          return response;\n        }\n      }\n    } catch (error) {\n      return obj.dispatch(usernameError(error.message));\n    }\n  }\n);\n\nexport const destroyUser = createAsyncThunk(\n  \"login/destroyUser\",\n  async (payload, obj) => {\n    const response = await removeOrbitUser(payload);\n    return response;\n  }\n);\n\nexport const loginSlice = createSlice({\n  name: \"login\",\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    usernameError: (state, action) => {\n      if (action.payload === null) {\n        state.errors = [];\n      } else {\n        state.errors = [...new Set([...state.errors, action.payload])];\n      }\n    },\n    usersFetched: (state, action) => {\n      state.users = action.payload;\n    },\n    loadingStatus: (state, action) => {\n      state.status = action.payload;\n    },\n    // setUser: {\n    //   reducer(state, action) {\n    //     state.username = action.payload.username;\n    //   },\n    //   prepare(username) {\n    //     return {\n    //       payload: {\n    //         // id: nanoid(),\n    //         username: username,\n    //         extra: \"zz\",\n    //       },\n    //     };\n    //   },\n    // },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(createUser.pending, (state) => {\n        state.status = \"loading\";\n      })\n      .addCase(createUser.fulfilled, (state, action) => {\n        state.status = \"idle\";\n        if (action.payload.username) {\n          state.username = action.payload.username;\n        }\n      })\n      .addCase(fetchUsers.pending, (state) => {\n        state.status = \"loading\";\n      })\n      .addCase(fetchUsers.fulfilled, (state, action) => {\n        state.status = \"idle\";\n        state.users = action.payload;\n      });\n  },\n});\n\nexport const { usernameError, usersFetched, loadingStatus } =\n  loginSlice.actions;\n\nexport const userSelector = (state) => state.login.username;\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\n// export const incrementIfOdd = (amount) => (dispatch, getState) => {\n//   const currentValue = selectCount(getState());\n//   if (currentValue % 2 === 1) {\n//     dispatch(incrementByAmount(amount));\n//   }\n// };\n\nexport default loginSlice.reducer;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n// import { fetchOrbitItems, addOrbitItem, removeOrbitItem } from \"./todoAPI\";\n\nconst initialState = {\n  username: \"\",\n  aavePrice: 200,\n  ethPrice: 2000,\n  btcPrice: 30000,\n};\n\n// export const fetchItems = createAsyncThunk(\"todo/fetchItems\", async (orbit) => {\n//   const response = await fetchOrbitItems(orbit);\n//   return response;\n// });\n\nexport const cryptoSlice = createSlice({\n  name: \"crypto\",\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    newTicker: (state, action) => {\n      switch (action.payload.product_id) {\n        case \"BTC-USD\":\n          state.btcPrice = action.payload.price;\n          break;\n        case \"ETH-USD\":\n          state.ethPrice = action.payload.price;\n          break;\n        case \"AAVE-USD\":\n          state.aavePrice = action.payload.price;\n          break;\n        default:\n          console.log(action.payload);\n      }\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  // extraReducers: (builder) => {\n  //   builder\n  //     .addCase(fetchItems.pending, (state) => {\n  //       state.status = \"loading\";\n  //     })\n  //     .addCase(fetchItems.fulfilled, (state, action) => {\n  //       state.status = \"idle\";\n  //       state.items = action.payload;\n  //     });\n  // },\n});\n\nexport const { newTicker } = cryptoSlice.actions;\n\n// export const userSelector = (state) => state.home.username;\n\nexport default cryptoSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport counterReducer from \"../features/counter/counterSlice\";\nimport chatReducer from \"../features/chat/chatSlice\";\nimport loginReducer from \"../features/login/loginSlice\";\nimport cryptoReducer from \"../features/crypto/cryptoSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n    chat: chatReducer,\n    login: loginReducer,\n    crypto: cryptoReducer,\n  },\n});\n","import React from \"react\";\nimport { useStopwatch } from \"react-timer-hook\";\n\nexport default function Timer() {\n  const { seconds, minutes, hours, days, isRunning, start, pause, reset } =\n    useStopwatch({ autoStart: true });\n\n  return (\n    <span style={{}}>\n      {/* <h1>react-timer-hook</h1>\n      <p>Stopwatch Demo</p> */}\n      <span style={{}}>\n        <span>Waiting for peers {minutes}</span>:<span>{seconds}</span>\n      </span>\n      {/* <p>{isRunning ? 'Running' : 'Not running'}</p>\n      <button onClick={start}>Start</button>\n      <button onClick={pause}>Pause</button>\n      <button onClick={reset}>Reset</button> */}\n    </span>\n  );\n}\n","import { useState, useEffect } from \"react\";\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height,\n  };\n}\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  );\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Room from \"ipfs-pubsub-room\";\nimport {\n  addMessage,\n  getMessages,\n  fetchMessages,\n  removeMessage,\n  addPeer,\n  removePeer,\n  addEvent,\n} from \"./chatSlice\";\nimport { fetchUsers } from \"../login/loginSlice\";\nimport styles from \"./Chat.module.css\";\nimport moment from \"moment\";\nimport { store } from \"../../app/store\";\nimport { userSelector } from \"../login/loginSlice\";\nimport Timer from \"./timer\";\nimport useWindowDimensions from \"../../hooks/useWindowDimensions\";\n\nconst groupBy = (items, key) =>\n  items.reduce(\n    (result, item) => ({\n      ...result,\n      [item[key]]: [...(result[item[key]] || []), item],\n    }),\n    {}\n  );\n\nconst ChatMessagesWrapper = styled.div`\n  max-height: 450px;\n  overflow-y: scroll;\n`;\n\nconst InputWrapper = styled.div`\n  position: fixed;\n  bottom: 40px;\n  width: 75%;\n  background-color: #f4f5fb;\n  @media (max-width: 660px) {\n    width: 96%;\n  }\n`;\n\nconst Avatar = styled.img`\n  width: 50px;\n  border-radius: 30px;\n`;\n\nconst AvatarWrapper = styled.div`\n  position: absolute;\n  left: 20px;\n  bottom: 9px;\n`;\n\nexport function Chat(props) {\n  const [input, setInput] = useState(\"\");\n  const [isMobile, setIsMobile] = useState(false);\n  const [rtcPeerConnections, setRtcPeerConnections] = useState([]);\n  const { width } = useWindowDimensions();\n  const messagesEndRef = useRef(null);\n  const chatEventRoom = useRef(null);\n  const webrtcRoom = useRef(null);\n  const videoRefs = useRef([]);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const messages = useSelector(getMessages);\n  const username = useSelector(userSelector);\n  const users = useSelector((state) => state.login.users);\n  const peers = useSelector((state) => state.chat.peers);\n  const events = useSelector((state) => state.chat.events);\n  let peerUsers = peers.map((peer) =>\n    users.find((user) => user.peerId === peer)\n  );\n  peerUsers = peerUsers.filter((user) => user);\n  const getTypingPeers = (peerUsers, events) => {\n    const groupedEvents = groupBy(events, \"peerId\");\n    const typing = peerUsers.map((user) => {\n      if (groupedEvents[user.peerId]) {\n        const isTyping = groupedEvents[user.peerId][0].event === \"FOCUS_IN\";\n        return isTyping ? user.username : null;\n      }\n      return null;\n    });\n    return typing.filter((el) => el);\n  };\n  const typingPeers = getTypingPeers(peerUsers, events);\n  const { messagesDb, usersDb, ipfs } = Object(props.orbit);\n  window.store = store;\n  window.addMessage = addMessage;\n  window.orbit = props.orbit;\n  window.rtcPeerConnections = rtcPeerConnections;\n  window.webrtcRoom = webrtcRoom;\n  // window.store.dispatch(window.addMessage({orbit: window.orbit.messagesDb, message: \"from console\", username: \"doe\"}))\n  window.onbeforeunload = async (event) => {\n    await chatEventRoom.current.leave();\n    await webrtcRoom.current.leave();\n    return rtcPeerConnections.map((pc) => pc.pc.close());\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  useEffect(() => {\n    setIsMobile(width < 1200);\n  }, [width]);\n\n  useEffect(() => {\n    if (!username.length) {\n      history.push(\"/\");\n    }\n  }, [username]);\n\n  useEffect(() => {\n    if (usersDb && Object.keys(usersDb).length !== 0) {\n      dispatch(fetchUsers(usersDb));\n      usersDb.events.on(\"replicated\", (address) => {\n        dispatch(fetchUsers(usersDb));\n      });\n    }\n  }, [usersDb]);\n\n  useEffect(() => {\n    if (messagesDb && Object.keys(messagesDb).length !== 0) {\n      dispatch(fetchMessages(messagesDb));\n      messagesDb.events.on(\"replicated\", (address) => {\n        dispatch(fetchMessages(messagesDb));\n      });\n    }\n  }, [messagesDb]);\n\n  useEffect(() => {\n    if (ipfs && Object.keys(ipfs).length !== 0) {\n      webrtcRoom.current = new Room(ipfs, \"orbit-chat-webrtc\");\n      chatEventRoom.current = new Room(ipfs, \"orbit-chat-event\");\n      chatEventRoom.current.on(\"peer joined\", async (peer) => {\n        dispatch(addPeer(peer));\n        dispatch(fetchUsers(usersDb));\n        const pc = createRtcPeerConnection(peer);\n        const existing = rtcPeerConnections.find(\n          (peer) => peer.peerId === pc.peerId\n        );\n        if (!existing) {\n          setRtcPeerConnections((rtcPeerConnections) => [\n            ...rtcPeerConnections,\n            pc,\n          ]);\n        }\n      });\n      chatEventRoom.current.on(\"peer left\", (peer) => {\n        dispatch(removePeer(peer));\n        setRtcPeerConnections((rtcPeerConnections) =>\n          rtcPeerConnections.filter((item) => item.peerId !== peer)\n        );\n      });\n      chatEventRoom.current.on(\"message\", (message) => {\n        const payload = {\n          event: message.data.toString(),\n          peerId: message.from,\n        };\n        dispatch(addEvent(payload));\n      });\n    }\n    return async () => {\n      if (chatEventRoom.current) {\n        await chatEventRoom.current.leave();\n      }\n      if (webrtcRoom.current) {\n        await webrtcRoom.current.leave();\n      }\n      return rtcPeerConnections.map((pc) => pc.pc.close());\n    };\n  }, [ipfs]);\n\n  useEffect(() => {\n    webrtcRoom.current?.on(\"message\", handleRtcRoomMessage);\n  }, [rtcPeerConnections]);\n\n  const handleRtcRoomMessage = async (payload) => {\n    const connection = rtcPeerConnections.find(\n      (pc) => pc.peerId === payload.from\n    );\n    if (!connection) return;\n    const pc = connection.pc;\n    const obj = JSON.parse(payload.data.toString());\n    let { desc, candidate, user, from, to } = obj;\n    const peerId = await ipfs.id();\n    if (peerId.id !== to) return;\n    if (user === username) return;\n    try {\n      if (desc) {\n        if (desc.type === \"offer\") {\n          desc = { type: \"offer\", sdp: atob(desc.sdp) };\n          await pc.setRemoteDescription(desc);\n          const answer = await pc.createAnswer();\n          await pc.setLocalDescription(answer);\n          const payload = await encodeSdp(\n            pc.localDescription.sdp,\n            \"answer\",\n            from\n          );\n          webrtcRoom.current.broadcast(payload);\n        } else if (desc.type === \"answer\") {\n          desc = { type: \"answer\", sdp: atob(desc.sdp) };\n          await pc.setRemoteDescription(new RTCSessionDescription(desc));\n        } else {\n          console.log(\"Unsupported SDP type.\");\n        }\n      } else if (candidate) {\n        await pc.addIceCandidate(new RTCIceCandidate(candidate));\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const createRtcPeerConnection = (peer) => {\n    const pc = new RTCPeerConnection({\n      iceServers: [\n        { urls: \"stun:stun.l.google.com:19302\" },\n        { urls: \"stun:stun.services.mozilla.com\" },\n      ],\n    });\n    pc.onicecandidate = async (e) => {\n      if (e.candidate) {\n        const from = await ipfs.id();\n        webrtcRoom.current.broadcast(\n          JSON.stringify({\n            candidate: e.candidate,\n            user: username,\n            from: from.id,\n            to: peer,\n          })\n        );\n      }\n    };\n    pc.ontrack = async (e) => {\n      const existing = videoRefs.current.find(\n        (ref) => ref.srcObject?.id === e.streams[0].id\n      );\n      if (existing) return;\n      const videos = videoRefs.current.filter((ref) => ref.srcObject === null);\n      if (videos.length) {\n        videos[0].srcObject = e.streams[0];\n        if (videos[0].paused) {\n          await videos[0].play();\n        }\n      }\n    };\n    pc.onnegotiationneeded = async (e) => {\n      const offer = await pc.createOffer();\n      await pc.setLocalDescription(offer);\n      const payload = await encodeSdp(pc.localDescription.sdp, \"offer\", peer);\n      webrtcRoom.current.broadcast(payload);\n    };\n    return { peerId: peer, pc };\n  };\n\n  const streamVideo = async () => {\n    const stream = await navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true,\n    });\n    rtcPeerConnections.forEach((pc) => {\n      stream.getTracks().forEach((track) => pc.pc.addTrack(track, stream));\n    });\n  };\n\n  const encodeSdp = async (sdp, type, peer) => {\n    const from = await ipfs.id();\n    const obj = {\n      desc: {\n        type: type,\n        sdp: btoa(sdp),\n      },\n      user: username,\n      from: from.id,\n      to: peer,\n    };\n    return JSON.stringify(obj);\n  };\n  window.encodeSdp = encodeSdp;\n\n  const handleInputChange = (event) => {\n    setInput(event.target.value);\n  };\n\n  const inputSubmit = () => {\n    if (input.length && username.length) {\n      dispatch(addMessage({ orbit: messagesDb, message: input, username }));\n      setInput(\"\");\n    }\n  };\n\n  const formatDate = (timestamp) => {\n    const date = new Date(parseInt(timestamp));\n    return moment(date).startOf(\"second\").fromNow();\n  };\n\n  const remove = (el) => {\n    dispatch(\n      removeMessage({\n        hash: el.target.getAttribute(\"hash\"),\n        orbit: messagesDb,\n      })\n    );\n  };\n\n  const focusIn = () => {\n    chatEventRoom.current.broadcast(\"FOCUS_IN\");\n  };\n\n  const focusOut = () => {\n    chatEventRoom.current.broadcast(\"FOCUS_OUT\");\n  };\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({\n      behavior: \"smooth\",\n    });\n  };\n\n  const setVideoRef = (ref) => {\n    if (ref === null) return;\n    const peerId = ref.getAttribute(\"peerid\");\n    const existing = videoRefs.current.find(\n      (ref) => ref.getAttribute(\"peerid\") === peerId\n    );\n    if (!existing) {\n      videoRefs.current = [...videoRefs.current, ref];\n    }\n  };\n\n  const orderedMessages = messages\n    .slice()\n    .sort((a, b) => a.timestamp - b.timestamp);\n  return (\n    <div className={`container ${styles.containerWrapper}`}>\n      <div className=\"row\">\n        <div className=\"col-sm-2 col-md-1\"></div>\n        <div className=\"col-sm-8 col-md-10\">\n          {rtcPeerConnections.map((pc, index) => (\n            <video\n              autoPlay\n              controls\n              playsInline\n              muted\n              ref={setVideoRef}\n              peerid={pc.peerId}\n              key={index}\n              width=\"150px\"\n              height=\"150px\"\n            ></video>\n          ))}\n          <button\n            onClick={streamVideo}\n            className=\"btn btn-success\"\n            disabled={!peers.length}\n          >\n            Stream video\n          </button>\n          <h3>\n            {username} -{\" \"}\n            {peers.length ? (\n              <span>\n                {peers.length} connected peers :{\" \"}\n                {peerUsers.map((peer) => peer.username).join(\", \")}\n              </span>\n            ) : (\n              <Timer />\n            )}\n          </h3>\n          <div>\n            <br />\n            <ChatMessagesWrapper>\n              {orderedMessages.map((item, index) => (\n                <div key={item.hash}>\n                  <div\n                    className={`card ${isMobile ? \"w-75\" : \"w-50\"} ${\n                      index % 2 === 0\n                        ? isMobile\n                          ? styles.alignRightMobile\n                          : styles.alignRight\n                        : styles.alignLeft\n                    } m-3`}\n                  >\n                    <div className={`card-body `}>\n                      <AvatarWrapper>\n                        <Avatar\n                          src=\"https://www.bootdey.com/img/Content/avatar/avatar3.png\"\n                          alt=\"\"\n                        />\n                        <div>\n                          <strong>{item.username}</strong>\n                        </div>\n                      </AvatarWrapper>\n                      <p className=\"chat-message\">{item.message}</p>\n                      <div className={styles.textRight}>\n                        {formatDate(item.timestamp)}\n                      </div>\n                      <button\n                        onClick={remove}\n                        hash={item.hash}\n                        className={`btn btn-danger ${styles.delete}`}\n                      >\n                        <i\n                          className=\"bi-trash\"\n                          onClick={remove}\n                          hash={item.hash}\n                        ></i>\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              ))}\n              <div ref={messagesEndRef} />\n            </ChatMessagesWrapper>\n            <br />\n            <br />\n            <InputWrapper>\n              {typingPeers.length ? (\n                <p>{typingPeers.join(\", \")} is typing...</p>\n              ) : (\n                <br />\n              )}\n              <textarea\n                type=\"text\"\n                value={input}\n                onChange={handleInputChange}\n                name=\"input\"\n                className=\"form-control\"\n                onFocus={focusIn}\n                onBlur={focusOut}\n              />\n              <hr />\n              <button\n                onClick={inputSubmit}\n                className=\"btn btn-success w-100\"\n                id=\"chatSubmit\"\n              >\n                Submit\n              </button>\n            </InputWrapper>\n          </div>\n        </div>\n        <div className=\"col-sm-2 col-md-1\"></div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  createUser,\n  destroyUser,\n  usernameError,\n  loadingStatus,\n} from \"./loginSlice\";\nimport { useHistory } from \"react-router-dom\";\n\nexport function Login(props) {\n  const dispatch = useDispatch();\n  const [username, setUsername] = useState(\"\");\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const userName = useSelector((state) => state.login.username);\n  const errors = useSelector((state) => state.login.errors);\n  const status = useSelector((state) => state.login.status);\n  const history = useHistory();\n  const { orbit } = props;\n\n  window.destroyUser = destroyUser;\n  // window.store.getState().login.users.map((user) => window.store.dispatch(window.destroyUser({orbit: window.orbit.usersDb, hash: user.hash})))\n\n  useEffect(() => {\n    if (userName.length) {\n      history.push(\"/chat\");\n    }\n  }, [userName]);\n\n  useEffect(() => {\n    if (isSubmitted) {\n      dispatch(usernameError(null));\n      if (username.length) {\n        if (orbit?.usersDb) {\n          dispatch(createUser({ username, orbit })).then(() => {\n            history.push(\"/chat\");\n          });\n        }\n      }\n    }\n  }, [orbit]);\n\n  const handleOnChange = (event) => {\n    setUsername(event.target.value);\n  };\n\n  const inputSubmit = () => {\n    if (username.length) {\n      setIsSubmitted(true);\n      if (orbit?.usersDb) {\n        dispatch(createUser({ username, orbit }));\n      } else {\n        dispatch(usernameError(\"Loading database ...\"));\n        dispatch(loadingStatus(\"loading\"));\n      }\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-sm-4 \"></div>\n        <div className=\"col-sm-4 \">\n          <h3>Enter Username</h3>\n          {errors.length ? (\n            <div\n              className=\"alert alert-danger alert-dismissible fade show\"\n              id=\"alert\"\n            >\n              <div>\n                {errors.map((error, index) => (\n                  <span key={index}>{error}</span>\n                ))}\n              </div>\n            </div>\n          ) : null}\n          <div>\n            <div>\n              <input\n                type=\"text\"\n                value={username}\n                onChange={handleOnChange}\n                className=\"form-control\"\n              />\n              <hr />\n              <button\n                onClick={inputSubmit}\n                className=\"btn btn-success w-100\"\n                disabled={status === \"loading\"}\n              >\n                Submit\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-sm-4\"></div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport styles from \"./Crypto.module.css\";\nimport { usePrevious } from \"../../hooks/usePrevious\";\n\nexport function TickerCard(props) {\n  const prevPrice = usePrevious(props.price);\n  const tick = prevPrice !== props.price;\n\n  // const prevPriceRef = useRef();\n  // useEffect(() => {\n  //   prevPriceRef.current = props.price;\n  // }, [props.price]);\n  // const prevPrice = prevPriceRef.current;\n  // const tick = prevPrice !== props.price;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-body\">\n        {props.ticker} :{\" \"}\n        <h1 className={tick ? styles.red : styles.black}>{props.price}</h1>\n      </div>\n    </div>\n  );\n}\n","import { useEffect, useRef } from \"react\";\n\nexport const usePrevious = (value) => {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n};\n","import React, { useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { newTicker } from \"./cryptoSlice\";\n// import { useHistory } from \"react-router-dom\";\nimport Websocket from \"react-websocket\";\n// import styles from \"./Todo.module.css\";\nimport { TickerCard } from \"./TickerCard\";\n\nexport function Crypto(props) {\n  const dispatch = useDispatch();\n  let refWebSocket = useRef();\n  const aavePrice = useSelector((state) => state.crypto.aavePrice);\n  const btcPrice = useSelector((state) => state.crypto.btcPrice);\n  const ethPrice = useSelector((state) => state.crypto.ethPrice);\n\n  const handleWsOpen = (event) => {\n    const message = {\n      type: \"subscribe\",\n      channels: [\n        {\n          name: \"ticker\",\n          product_ids: [\"AAVE-USD\", \"ETH-USD\", \"BTC-USD\"],\n        },\n      ],\n    };\n    refWebSocket.sendMessage(JSON.stringify(message));\n  };\n\n  const handleWsData = (event) => {\n    const msg = JSON.parse(event);\n    dispatch(newTicker(msg));\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"row pt-5\">\n        <div className=\"col-sm-4 \">\n          <TickerCard price={aavePrice} ticker=\"AAVE\" />\n        </div>\n        <div className=\"col-sm-4 \">\n          <TickerCard price={ethPrice} ticker=\"ETH\" />\n        </div>\n        <div className=\"col-sm-4 \">\n          <TickerCard price={btcPrice} ticker=\"BTC\" />\n        </div>\n      </div>\n      <Websocket\n        url=\"wss://ws-feed.pro.coinbase.com\"\n        onMessage={handleWsData}\n        onOpen={handleWsOpen}\n        ref={(Websocket) => {\n          refWebSocket = Websocket;\n        }}\n      />\n    </div>\n  );\n}\n","import IPFS from \"ipfs\";\nconst OrbitDB = require(\"orbit-db\");\n\nexport const orbitInstance = async () => {\n  try {\n    // const ipfsOptions =  {repo: 'ipfs' + Math.random()};\n    // const ipfsOptions = { repo: \"./ipfs\" };\n    // const ipfsOptions = { repo: \"/orbitdb/orbitchat/browser/new/ipfs/0.0.1\" };\n    // const ipfs = await IPFS.create(ipfsOptions);\n    // window.LOG = \"Verbose\";\n    const ipfs = await IPFS.create({\n      repo: \"/orbitdb/orbitchat/browser/new/ipfs/0.0.3\",\n      start: true,\n      preload: {\n        enabled: true,\n      },\n      EXPERIMENTAL: {\n        pubsub: true,\n      },\n      relay: { enabled: true, hop: { enabled: true, active: true } },\n      config: {\n        Addresses: {\n          Swarm: [\n            // Use IPFS dev signal server\n            // \"/dns4/star-signal.cloud.ipfs.team/wss/p2p-webrtc-star\",\n            // \"/dns4/ws-star.discovery.libp2p.io/tcp/443/wss/p2p-websocket-star\",\n            // Use IPFS dev webrtc signal server\n            // \"/dns4/wrtc-star1.par.dwebops.pub/tcp/443/wss/p2p-webrtc-star/\",\n            // \"/dns4/wrtc-star2.sjc.dwebops.pub/tcp/443/wss/p2p-webrtc-star/\",\n            // \"/dns4/webrtc-star.discovery.libp2p.io/tcp/443/wss/p2p-webrtc-star/\",\n            process.env.REACT_APP_SIGNALLING,\n            // Use local signal server\n            // \"/ip4/0.0.0.0/tcp/9090/wss/p2p-webrtc-star\",\n          ],\n        },\n      },\n    });\n    const orbitdb = await OrbitDB.createInstance(ipfs);\n\n    const options = {\n      accessController: {\n        write: [\"*\"],\n      },\n      replicate: true,\n      create: true,\n      sync: true,\n      localOnly: false,\n      write: [\"*\"],\n    };\n\n    // const options = {\n    //   write: [\"*\"],\n    // };\n    // const db = await orbitdb.feed(\"orbitchat.events\", options);\n    const messagesDb = await orbitdb.open(\n      \"/orbitdb/zdpuAwNRaakdMhomxjUYWpDsU3cj3vMP5dgx1mhzvMzHBprab/orbitchat.messages\",\n      options\n    );\n    const usersDb = await orbitdb.open(\n      \"/orbitdb/zdpuB2wKeHGiVM9GK8vXeiRgadAshDbfik1yRByyAqFGu1vX4/orbitchat.users\",\n      options\n    );\n    // const db = await orbitdb.open(\n    //   \"/orbitdb/zdpuAwcCyQtPjEKLzgnDqo44WeMtLuQQnmwBzUMxMQgev3KfH/orbit-db.messages\",\n    //   {\n    //     // If database doesn't exist, create it\n    //     create: false,\n    //     overwrite: false,\n    //     // Load only the local version of the database,\n    //     // don't load the latest from the network yet\n    //     localOnly: false,\n    //     type: \"feed\",\n    //     // If \"Public\" flag is set, allow anyone to write to the database,\n    //     // otherwise only the creator of the database can write\n    //     accessController: {\n    //       write: [\"*\"],\n    //     },\n    //   }\n    // );\n    // const db = await orbitdb.feed(\n    //   \"/orbitdb/zdpuAwcCyQtPjEKLzgnDqo44WeMtLuQQnmwBzUMxMQgev3KfH/orbit-db.messages\"\n    // );\n\n    await messagesDb.load();\n    await usersDb.load();\n    return { messagesDb, usersDb, ipfs };\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import React from \"react\";\nimport { HashRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Counter } from \"./features/counter/Counter\";\nimport { Chat } from \"./features/chat/Chat\";\nimport { Login } from \"./features/login/Login\";\nimport { Crypto } from \"./features/crypto/Crypto\";\nimport { orbitInstance } from \"./app/orbit\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { orbit: {} };\n  }\n\n  async componentDidMount() {\n    const orbitConnector = await orbitInstance();\n    this.setState({ orbit: orbitConnector });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Router>\n          <div>\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n              <a className=\"navbar-brand\" href=\"#\">\n                DCHAT\n              </a>\n              <span className=\"navbar-text\">\n                <Link to=\"/\" className=\"nav-link\">\n                  login\n                </Link>\n              </span>\n              <span className=\"navbar-text\">\n                <Link to=\"/crypto\" className=\"nav-link\">\n                  crypto\n                </Link>\n              </span>\n              <span className=\"navbar-text\">\n                <Link to=\"/counter\" className=\"nav-link\">\n                  counter\n                </Link>\n              </span>\n              <span className=\"navbar-text\">\n                <Link to=\"/chat\" className=\"nav-link\">\n                  chat\n                </Link>\n              </span>\n            </nav>\n\n            {/* A <Switch> looks through its children <Route>s and\n                renders the first one that matches the current URL. */}\n            <Switch>\n              <Route path=\"/chat\">\n                <Chat orbit={this.state.orbit} />\n              </Route>\n              <Route path=\"/counter\">\n                <Counter />\n              </Route>\n              <Route path=\"/crypto\">\n                <Crypto />\n              </Route>\n              <Route path=\"/\">\n                <Login orbit={this.state.orbit} />\n              </Route>\n            </Switch>\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  username: state.login.username,\n});\nconst mapDispatchToProps = () => {\n  return {\n    // increment, decrement\n  };\n};\n// export default App;\nexport default connect(mapStateToProps, mapDispatchToProps())(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { store } from \"./app/store\";\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"Crypto_red__FaxjM\",\"black\":\"Crypto_black__2Korf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Counter_row__1C_4f\",\"value\":\"Counter_value__1d0te\",\"button\":\"Counter_button__1xpSV\",\"textbox\":\"Counter_textbox__3ODaX\",\"asyncButton\":\"Counter_asyncButton__2UAr3 Counter_button__1xpSV\"};"],"sourceRoot":""}